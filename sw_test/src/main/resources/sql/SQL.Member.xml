<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//dtd mapper 3.0//en" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.jh.pf.dao.MemberDao">

	<select id="checkId" parameterType="Map" resultType="int">
		select count(member_idx) from member where member_id=#{ui}
	</select>
	
	<insert id="join" parameterType="Member">
		insert into member (type_seq, member_id, member_pw, member_name, member_nick, email, create_date) 
		values(1,#{memberId},sha2(md5(#{memberPw}),512),#{memberName},#{memberNick},#{email},now()) 
	</insert>

	<select id="findMember" parameterType="String" resultType="Member">
		select * from member where member_id=#{0}
	</select>

	<select id="makeCipher" parameterType="String" resultType="String">
		select sha2(md5(#{0}),512)
	</select>
	
	<select id="mList" parameterType="Map" resultType="Map">
		select member_idx, member_id, member_name, member_nick, email, DATE_FORMAT(create_date, '%Y-%m-%d') as create_date from member 
		where 1=1 
		<if test="searchType!=null and searchType==1">
 			and member_id like concat('%',#{searchText},'%') or email like concat('%',#{searchText},'%')  
 		</if>
 		<if test="searchType!=null and searchType==2">
 			and member_id like concat('%',#{searchText},'%')  
 		</if>
 		<if test="searchType!=null and searchType==3">
 			and email like concat('%',#{searchText},'%')  
 		</if>
		order by #{sidx} #{sord} limit ${startIndex}, ${rows}
	</select>
	
	<select id="cMember" parameterType="Map" resultType="int">
		select count(member_idx) from member 
		where 1=1 
		<if test="searchType!=null and searchType==1">
 			and member_id like concat('%',#{searchText},'%') or email like concat('%',#{searchText},'%')  
 		</if>
 		<if test="searchType!=null and searchType==2">
 			and member_id like concat('%',#{searchText},'%')  
 		</if>
 		<if test="searchType!=null and searchType==3">
 			and email like concat('%',#{searchText},'%')  
 		</if>
	</select>
	
	<delete id="delMember" parameterType="Map">
		delete from member where member_idx = #{member_idx}
	</delete>
	
</mapper>